{"ast":null,"code":"import'./App.css';import Search from'./components/search/search';import CurrentWeather from'./components/current-weather/current-weather';import Forecast from'./components/forecast/forecast';import{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[currentWeather,setCurrentWeather]=useState(null);const[forecast,setForecast]=useState(null);const handleOnSearchChange=searchData=>{// Extract latitude and longitude from the selected city (splitting by the comma and trimming any extra spaces)\nconst[latitude,longitude]=searchData.value.split(\",\").map(coord=>coord.trim());// Ensure the latitude and longitude are valid numbers\nif(!isNaN(latitude)&&!isNaN(longitude)){const currentWeatherFetch=fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=c8e9c117a04ee89379b6d3352ee513fd&units=metric`);const forecastFetch=fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&appid=c8e9c117a04ee89379b6d3352ee513fd&units=metric`);Promise.all([currentWeatherFetch,forecastFetch]).then(async response=>{const weatherResponse=await response[0].json();const forecastResponse=await response[1].json();// Store weather and forecast data in state\nsetCurrentWeather({city:searchData.label,...weatherResponse});setForecast({city:searchData.label,...forecastResponse});}).catch(err=>console.log(err));}else{console.error(\"Invalid latitude or longitude values.\");}};console.log(currentWeather);console.log(forecast);return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(Search,{onSearchChange:handleOnSearchChange}),currentWeather&&/*#__PURE__*/_jsx(CurrentWeather,{data:currentWeather}),forecast&&/*#__PURE__*/_jsx(Forecast,{data:forecast}),/*#__PURE__*/_jsx(\"p\",{class:\"copyright\",children:\"2024 Gerald Obuseh\"})]});}export default App;","map":{"version":3,"names":["Search","CurrentWeather","Forecast","useState","jsx","_jsx","jsxs","_jsxs","App","currentWeather","setCurrentWeather","forecast","setForecast","handleOnSearchChange","searchData","latitude","longitude","value","split","map","coord","trim","isNaN","currentWeatherFetch","fetch","forecastFetch","Promise","all","then","response","weatherResponse","json","forecastResponse","city","label","catch","err","console","log","error","className","children","onSearchChange","data","class"],"sources":["/Users/geraldobuseh/react-apps/react-weather-app/src/App.js"],"sourcesContent":["import './App.css';\nimport Search from './components/search/search';\nimport CurrentWeather from './components/current-weather/current-weather';\nimport Forecast from './components/forecast/forecast';\nimport { useState } from 'react';\n\n\nfunction App() {\n\n  const [currentWeather, setCurrentWeather] = useState(null);\n\n  const [forecast, setForecast] = useState(null);\n\n\n\n  const handleOnSearchChange = (searchData) => {\n    // Extract latitude and longitude from the selected city (splitting by the comma and trimming any extra spaces)\n    const [latitude, longitude] = searchData.value.split(\",\").map(coord => coord.trim());\n  \n    // Ensure the latitude and longitude are valid numbers\n    if (!isNaN(latitude) && !isNaN(longitude)) {\n  \n      const currentWeatherFetch = fetch(\n        `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=c8e9c117a04ee89379b6d3352ee513fd&units=metric`\n      );\n  \n      const forecastFetch = fetch(\n        `https://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&appid=c8e9c117a04ee89379b6d3352ee513fd&units=metric`\n      );\n  \n      Promise.all([currentWeatherFetch, forecastFetch])\n        .then(async (response) => {\n          const weatherResponse = await response[0].json();\n          const forecastResponse = await response[1].json();\n  \n          // Store weather and forecast data in state\n          setCurrentWeather({ city: searchData.label, ...weatherResponse });\n          setForecast({ city: searchData.label, ...forecastResponse });\n        })\n        .catch((err) => console.log(err));\n    } else {\n      console.error(\"Invalid latitude or longitude values.\");\n    }\n  };\n\n\n  console.log(currentWeather);\n  console.log(forecast);\n\n\n  return (\n    <div className=\"container\">\n      <Search onSearchChange = {handleOnSearchChange} />\n      {currentWeather && <CurrentWeather data={currentWeather} />}\n      {forecast && <Forecast data={forecast} />}\n      <p class=\"copyright\">\n             2024 Gerald Obuseh\n    </p>\n    </div>\n    \n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,WAAW,CAClB,MAAO,CAAAA,MAAM,KAAM,4BAA4B,CAC/C,MAAO,CAAAC,cAAc,KAAM,8CAA8C,CACzE,MAAO,CAAAC,QAAQ,KAAM,gCAAgC,CACrD,OAASC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAGjC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CAEb,KAAM,CAACC,cAAc,CAAEC,iBAAiB,CAAC,CAAGP,QAAQ,CAAC,IAAI,CAAC,CAE1D,KAAM,CAACQ,QAAQ,CAAEC,WAAW,CAAC,CAAGT,QAAQ,CAAC,IAAI,CAAC,CAI9C,KAAM,CAAAU,oBAAoB,CAAIC,UAAU,EAAK,CAC3C;AACA,KAAM,CAACC,QAAQ,CAAEC,SAAS,CAAC,CAAGF,UAAU,CAACG,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,KAAK,EAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC,CAEpF;AACA,GAAI,CAACC,KAAK,CAACP,QAAQ,CAAC,EAAI,CAACO,KAAK,CAACN,SAAS,CAAC,CAAE,CAEzC,KAAM,CAAAO,mBAAmB,CAAGC,KAAK,CAC/B,uDAAuDT,QAAQ,QAAQC,SAAS,sDAClF,CAAC,CAED,KAAM,CAAAS,aAAa,CAAGD,KAAK,CACzB,wDAAwDT,QAAQ,QAAQC,SAAS,sDACnF,CAAC,CAEDU,OAAO,CAACC,GAAG,CAAC,CAACJ,mBAAmB,CAAEE,aAAa,CAAC,CAAC,CAC9CG,IAAI,CAAC,KAAO,CAAAC,QAAQ,EAAK,CACxB,KAAM,CAAAC,eAAe,CAAG,KAAM,CAAAD,QAAQ,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC,CAChD,KAAM,CAAAC,gBAAgB,CAAG,KAAM,CAAAH,QAAQ,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC,CAEjD;AACArB,iBAAiB,CAAC,CAAEuB,IAAI,CAAEnB,UAAU,CAACoB,KAAK,CAAE,GAAGJ,eAAgB,CAAC,CAAC,CACjElB,WAAW,CAAC,CAAEqB,IAAI,CAAEnB,UAAU,CAACoB,KAAK,CAAE,GAAGF,gBAAiB,CAAC,CAAC,CAC9D,CAAC,CAAC,CACDG,KAAK,CAAEC,GAAG,EAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC,CACrC,CAAC,IAAM,CACLC,OAAO,CAACE,KAAK,CAAC,uCAAuC,CAAC,CACxD,CACF,CAAC,CAGDF,OAAO,CAACC,GAAG,CAAC7B,cAAc,CAAC,CAC3B4B,OAAO,CAACC,GAAG,CAAC3B,QAAQ,CAAC,CAGrB,mBACEJ,KAAA,QAAKiC,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBpC,IAAA,CAACL,MAAM,EAAC0C,cAAc,CAAI7B,oBAAqB,CAAE,CAAC,CACjDJ,cAAc,eAAIJ,IAAA,CAACJ,cAAc,EAAC0C,IAAI,CAAElC,cAAe,CAAE,CAAC,CAC1DE,QAAQ,eAAIN,IAAA,CAACH,QAAQ,EAACyC,IAAI,CAAEhC,QAAS,CAAE,CAAC,cACzCN,IAAA,MAAGuC,KAAK,CAAC,WAAW,CAAAH,QAAA,CAAC,oBAEvB,CAAG,CAAC,EACC,CAAC,CAGV,CAEA,cAAe,CAAAjC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}